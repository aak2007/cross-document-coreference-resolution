# Pipeline options for one specific experiment

# specify the annotators components used in the experiment
dcoref.annotators = tokenize, ssplit, pos, lemma, ner, parse, dcoref

# dataset generation format: WithinCross (false), CrossTopic (true)
dcoref.dataset = true

# the classifier used in the experiment, different classifier use different options, should be set for each case
dcoref.classifier = StructuredPerceptronConsideringBeam
dcoref.classifier.previouscurrent = false
dcoref.classifier.epoch = 10
dcoref.classifier.outputfeature = true

# cost function used in the experiment
dcoref.costfunction = LinearCostFunction

# loss function used in the experiment
dcoref.lossfunction = MetricLossFunction
dcoref.lossfunction.score = Pairwise

# search method used in the experiment
dcoref.search = BeamSearch
dcoref.search.beamwidth = 1
dcoref.search.maximumstep = 300

# do scoring
dcoref.score = false

# gold case or predicted case
dcoref.train.gold = true
dcoref.test.gold = true

# debug case
dcoref.debug = true

# the parameters for sieves, full or partial
dcoref.sievePasses = partial

# used the learned weight on the same training set
dcoref.training.testing = true

# do postprocess
dcoref.train.postprocess = false
dcoref.test.postprocess = false

# weight : average weight (true) or latest weight (false)
dcoref.weight = true

# stopping form (tuning or halt or none)
dcoref.stopping = none

# inteval
dcoref.interval = 1

# only testing: true, no training; false, with training
dcoref.testing = false
dcoref.testing.weightpath = /nfs/guille/xfern/users/xie/Experiment/corpus/weight.txt
